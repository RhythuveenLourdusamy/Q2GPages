{"uid":"272ebc9104eba209","name":"test_single_turn_case[SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY-Show me total Assets group by Created By and Tags-172-expected_json171-SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags]","fullName":"tests.q2g.jeeves_singleturn_test#test_single_turn_case","historyId":"c579d3414c03fd1f410272d95592928c","time":{"start":1729005030009,"stop":1729005090850,"duration":60841},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"use_case = 'SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY'\nuser_question = 'Show me total Assets group by Created By and Tags'\ntest_case = 172\nexpected_json = {'from': [{'name': 'Assets', 'product': 'freshservice', 'resource': 'Assets', 'type': 'RESOURCE'}], 'groupby': [{'name...'name': 'Created By', 'resource': 'Assets', 'type': 'FIELD'}, {'name': 'Tags', 'resource': 'Assets', 'type': 'FIELD'}]}\nexpected_sql = 'SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags'\n\n    @pytest.mark.parametrize(\n        \"use_case, user_question, test_case, expected_json, expected_sql\",\n        ConversationAPIHelper.load_test_cases_data(product) # Kindly add the filter in template_mapper.json file before using it\n    )\n    @allure.step(\"Test single-turn conversation API\")\n    def test_single_turn_case(use_case, user_question, test_case, expected_json, expected_sql):\n>       base_conversation_test.common_test_logic(use_case, user_question, test_case, expected_json)\n\ntests/q2g/jeeves_singleturn_test.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/q2g_helper/BaseConversationTest.py:13: in common_test_logic\n    response = self.api_helper.get_response_json(user_question, test_case)\nutils/ConversationAPIHelper.py:46: in get_response_json\n    response = self.api_helper.post(\nutils/APIRequestHelper.py:50: in post\n    self.__get_responses(response)\nutils/APIRequestHelper.py:60: in __get_responses\n    pretty_print(response)\nutils/APIRequestHelper.py:38: in pretty_print\n    pretty_print_response(response)\nutils/APIRequestHelper.py:26: in pretty_print_response\n    parsed = json.loads(response.text)\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x1025d8ad0>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:355: JSONDecodeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1729004625624,"stop":1729004625767,"duration":143},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"testStage":{"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)","statusTrace":"use_case = 'SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY'\nuser_question = 'Show me total Assets group by Created By and Tags'\ntest_case = 172\nexpected_json = {'from': [{'name': 'Assets', 'product': 'freshservice', 'resource': 'Assets', 'type': 'RESOURCE'}], 'groupby': [{'name...'name': 'Created By', 'resource': 'Assets', 'type': 'FIELD'}, {'name': 'Tags', 'resource': 'Assets', 'type': 'FIELD'}]}\nexpected_sql = 'SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags'\n\n    @pytest.mark.parametrize(\n        \"use_case, user_question, test_case, expected_json, expected_sql\",\n        ConversationAPIHelper.load_test_cases_data(product) # Kindly add the filter in template_mapper.json file before using it\n    )\n    @allure.step(\"Test single-turn conversation API\")\n    def test_single_turn_case(use_case, user_question, test_case, expected_json, expected_sql):\n>       base_conversation_test.common_test_logic(use_case, user_question, test_case, expected_json)\n\ntests/q2g/jeeves_singleturn_test.py:17: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nutils/q2g_helper/BaseConversationTest.py:13: in common_test_logic\n    response = self.api_helper.get_response_json(user_question, test_case)\nutils/ConversationAPIHelper.py:46: in get_response_json\n    response = self.api_helper.post(\nutils/APIRequestHelper.py:50: in post\n    self.__get_responses(response)\nutils/APIRequestHelper.py:60: in __get_responses\n    pretty_print(response)\nutils/APIRequestHelper.py:38: in pretty_print\n    pretty_print_response(response)\nutils/APIRequestHelper.py:26: in pretty_print_response\n    parsed = json.loads(response.text)\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py:346: in loads\n    return _default_decoder.decode(s)\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <json.decoder.JSONDecoder object at 0x1025d8ad0>\ns = '<html>\\r\\n<head><title>504 Gateway Time-out</title></head>\\r\\n<body>\\r\\n<center><h1>504 Gateway Time-out</h1></center>\\r\\n</body>\\r\\n</html>\\r\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n            obj, end = self.scan_once(s, idx)\n        except StopIteration as err:\n>           raise JSONDecodeError(\"Expecting value\", s, err.value) from None\nE           json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n\n/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py:355: JSONDecodeError","steps":[{"name":"Test single-turn conversation API","time":{"start":1729005030009,"stop":1729005090846,"duration":60837},"status":"broken","statusMessage":"json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\n","statusTrace":"  File \"/Users/rl/PycharmProjects/auroraTestAutomation/APIautomation/lib/python3.12/site-packages/allure_commons/_allure.py\", line 192, in impl\n    return func(*a, **kw)\n           ^^^^^^^^^^^^^^\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/tests/q2g/jeeves_singleturn_test.py\", line 17, in test_single_turn_case\n    base_conversation_test.common_test_logic(use_case, user_question, test_case, expected_json)\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/q2g_helper/BaseConversationTest.py\", line 13, in common_test_logic\n    response = self.api_helper.get_response_json(user_question, test_case)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/ConversationAPIHelper.py\", line 46, in get_response_json\n    response = self.api_helper.post(\n               ^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/APIRequestHelper.py\", line 50, in post\n    self.__get_responses(response)\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/APIRequestHelper.py\", line 60, in __get_responses\n    pretty_print(response)\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/APIRequestHelper.py\", line 38, in pretty_print\n    pretty_print_response(response)\n  File \"/Users/rl/Documents/GitHub/jeeves_automation/utils/APIRequestHelper.py\", line 26, in pretty_print_response\n    parsed = json.loads(response.text)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/__init__.py\", line 346, in loads\n    return _default_decoder.decode(s)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py\", line 337, in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/usr/local/Cellar/python@3.12/3.12.6/Frameworks/Python.framework/Versions/3.12/lib/python3.12/json/decoder.py\", line 355, in raw_decode\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\n","steps":[],"attachments":[],"parameters":[{"name":"use_case","value":"'SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY'"},{"name":"user_question","value":"'Show me total Assets group by Created By and Tags'"},{"name":"test_case","value":"172"},{"name":"expected_json","value":"{'select': [{'type': 'FUNCTION', 'name': 'COUNT', 'arguments': [{'type': 'FIELD', 'value': '*', 'resource': 'Assets'}], 'alias': None}, {'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'from': [{'type': 'RESOURCE', 'name': 'Assets', 'resource': 'Assets', 'product': 'freshservice'}], 'groupby': [{'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'resources': {'Assets': {'name': 'Assets', 'product': 'freshservice'}}}"},{"name":"expected_sql","value":"'SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags'"}],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":0,"attachmentStep":false}],"attachments":[{"uid":"934c295fc0db1ab3","name":"stdout","source":"934c295fc0db1ab3.txt","type":"text/plain","size":2682}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"stepsCount":1,"attachmentsCount":1,"attachmentStep":false},"afterStages":[],"labels":[{"name":"parentSuite","value":"tests.q2g"},{"name":"suite","value":"jeeves_singleturn_test"},{"name":"host","value":"FWS-CHE-LT-6357"},{"name":"thread","value":"87159-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.q2g.jeeves_singleturn_test"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"expected_json","value":"{'select': [{'type': 'FUNCTION', 'name': 'COUNT', 'arguments': [{'type': 'FIELD', 'value': '*', 'resource': 'Assets'}], 'alias': None}, {'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'from': [{'type': 'RESOURCE', 'name': 'Assets', 'resource': 'Assets', 'product': 'freshservice'}], 'groupby': [{'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'resources': {'Assets': {'name': 'Assets', 'product': 'freshservice'}}}"},{"name":"expected_sql","value":"'SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags'"},{"name":"test_case","value":"172"},{"name":"use_case","value":"'SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY'"},{"name":"user_question","value":"'Show me total Assets group by Created By and Tags'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"272ebc9104eba209.json","parameterValues":["{'select': [{'type': 'FUNCTION', 'name': 'COUNT', 'arguments': [{'type': 'FIELD', 'value': '*', 'resource': 'Assets'}], 'alias': None}, {'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'from': [{'type': 'RESOURCE', 'name': 'Assets', 'resource': 'Assets', 'product': 'freshservice'}], 'groupby': [{'type': 'FIELD', 'name': 'Created By', 'resource': 'Assets'}, {'type': 'FIELD', 'name': 'Tags', 'resource': 'Assets'}], 'resources': {'Assets': {'name': 'Assets', 'product': 'freshservice'}}}","'SELECT COUNT(*),Created By,Tags FROM Assets GROUP BY Created By,Tags'","172","'SINGLE_MODULE_WITH_MULTIPLE_GROUP_BY'","'Show me total Assets group by Created By and Tags'"]}